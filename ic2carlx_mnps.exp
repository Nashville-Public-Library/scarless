#!/bin/expect

# ic2carlx_mnps.exp
# James Staub
# Nashville Public Library

# READ CONFIG.PWD.INI
source ic2carlx_read_config.exp

# SET UP LOG
# TO WRITE TO THE LOG:
# logWrite $logFile "log entry"
source ic2carlx_log.exp
set logFile "$localPath$name.log"

# CONFIG
set nowEpoch [clock seconds]

# START BASH
set timeout 10
set prompt {\$ $}
spawn bash
expect -re $prompt

# expect_before to watch for timeouts; placed after "spawn bash" to avoid an error when run from crontab: Tcl_RegisterChannel: duplicate channel names
expect_before {
	timeout { 
		puts "timeout: aborting: [lindex [info level -1] 0]"
		exec echo "[lindex [info level -1] 0]" | mail -s "Infinite Campus error: TIMEOUT" james.staub@nashville.gov kate.wingate@nashville.gov
		logWrite $logFile "ABORTED: Infinite Campus error: TIMEOUT: [lindex [info level -1] 0]"
		exit 2
	}
}

logWrite $logFile "START get infinitecampus"

# RETRIEVE INFINITECAMPUS ZIP PACKAGE
set timeout 10
send "rsync -a "
send $icUser
send ":"
send $icPath
send "CARLX_INFINITECAMPUS.zip $localPath/CARLX_INFINITECAMPUS.zip"
send "\r"
expect "password:"
send $icPassword
send "\r"
expect -re $prompt

# RETRIEVE IMAGES
set timeout 1800
send "rsync -a "
send $icUser
send ":"
send $icPath
send "images/ $localPath/images/"
send "\r"
expect "password:"
send $icPassword
send "\r"
expect -re $prompt

# UNZIP INFINITE CAMPUS PACKAGE
set timeout 10
send "7za x -o"
send $localPath
send " "
send $localPath
send "CARLX_INFINITECAMPUS.zip"
send "\r"
expect "Would you like to replace the existing file*uit?"
send "y\r"
expect "Enter password \(will not be echoed\):"
send "$icPassword\r"
expect "Would you like to replace the existing file*uit?"
send "y\r"
expect -re $prompt

# VERIFY EXTRACT TIME
set timeout 10
send "stat -c %Y $localPath/CARLX_INFINITECAMPUS_STAFF.txt\r"
expect -re "(\[0-9]{10})"
set staffModified $expect_out(1,string)
expect -re $prompt
send "stat -c %Y $localPath/CARLX_INFINITECAMPUS_STUDENT.txt\r"
expect -re "(\[0-9]{10})"
set studentModified $expect_out(1,string)
if {$nowEpoch - $staffModified > 86400 || $nowEpoch - $studentModified > 86400} then {
	exec echo "EOM" | mail -s "Infinite Campus error: file too old" james.staub@nashville.gov kate.wingate@nashville.gov
	logWrite $logFile "ABORTED: Infinite Campus error: file too old"
	exit 2
}
expect -re $prompt

# SET FILE PERMISSIONS
set timeout 300
send "chmod 700 $localPath/CARLX_INFINITECAMPUS*\r"
expect -re $prompt
send "chmod -R 700 $localPath/images/\r"
expect -re $prompt
logWrite $logFile "COMPLETE get infinitecampus"

# FORMAT INFINITECAMPUS 
set timeout 600
logWrite $logFile "START format infinitecampus"
send "bash ic2carlx_mnps_staff_format_infinitecampus.sh\r"
expect -re $prompt
send "bash ic2carlx_mnps_students_format_infinitecampus.sh\r"
expect -re $prompt
logWrite $logFile "COMPLETE format infinitecampus"

# RETRIEVE CARLX MNPS STAFF AND STUDENTS
set timeout 600
logWrite $logFile "START get carlx"
send "$phpPath ic2carlx_get_carlx.php\r"
expect -re $prompt
logWrite $logFile "COMPLETE get carlx"

# COMPARE CARLX VS INFINITECAMPUS
set timeout 600
logWrite $logFile "START compare carlx vs infinitecampus"
send "sqlite3 ../data/ic2carlx_mnps_staff.db < ic2carlx_mnps_staff_compare.sql\r"
expect -re $prompt
send "sqlite3 ../data/ic2carlx_mnps_students.db < ic2carlx_mnps_students_compare.sql\r"

# ABORT IF CHANGE THRESHOLDS ARE EXCEEDED
#set timeout 10
#expect -re $prompt
#if (file_exists("../data/ic2carlx_mnps_staff_report_defaultbranch_ABORT.csv")||("../data/ic2carlx_mnps_students_report_defaultbranch_ABORT.csv")||("../data/ic2carlx_mnps_staff_report_borrowertype_ABORT.csv")||("../data/ic2carlx_mnps_students_report_borrowertype_ABORT.csv") {
#        echo "ABORT!!!\n";
#        exit;
#}
#expect -re $prompt

# SET FILE PERMISSIONS AGAIN
set timeout 300
send "chmod -R 700 ../data/*\r"
expect -re $prompt
logWrite $logFile "COMPLETE compare carlx vs infinitecampus"

# ADD/UPDATE/REMOVE FROM CARLX
# This is where I need to clobber the CarlX API service with multiple threads
# see https://github.com/Nashville-Public-Library/millennium2carlx/blob/master/fines.sh for example
# see also https://nikic.github.io/2012/12/22/Cooperative-multitasking-using-coroutines-in-PHP.html
# see also https://blog.ircmaxell.com/2012/07/what-generators-can-do-for-you.html#Other-Uses
# but until then, the purely sequential way...

exit

set timeout 3600
logWrite $logFile "START mnps staff put carlx"
send "$phpPath ic2carlx_mnps_staff_put_carlx.php\r"
expect -re $prompt
logWrite $logFile "COMPLETE mnps staff put carlx"
logWrite $logFile "START mnps students put carlx"
send "$phpPath ic2carlx_mnps_students_put_carlx.php\r"
expect -re $prompt
logWrite $logFile "COMPLETE mnps students put carlx"

exit
